name: qaul
version: 2.0.0-rc.4
summary: qaul - Internet Independent Wireless Mesh Communication App
description: Communicate directly from device to device via your local wifi network, or via the shared wifi network of your phone. Mesh local clouds together via manually added static nodes. Use this peer to peer communication method to communicate internet independently and completely off-the-grid.

confinement: strict
base: core22
grade: stable

slots:
  dbus-qaul:
    interface: dbus
    bus: session
    name: net.qaul.qaul

apps:
  qaul:
    command: bin/qaul
    extensions: [gnome]
    plugs:
      - home
      - mount-observe
      - network
      - network-control
      - process-control
      - system-observe

    slots:
      - dbus-qaul

parts:
  rust-deps:
    plugin: nil
    build-packages:
      - curl
    override-pull: |
      curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

  flutter-deps:
    plugin: nil
    source: https://github.com/flutter/flutter.git
    source-tag: 3.27.2
    override-build: |
      set -eux
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/bin
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/libexec
      cp -r $SNAPCRAFT_PART_SRC $SNAPCRAFT_PART_INSTALL/usr/libexec/flutter
      ln -sf $SNAPCRAFT_PART_INSTALL/usr/libexec/flutter/bin/flutter $SNAPCRAFT_PART_INSTALL/usr/bin/flutter
      export PATH="$SNAPCRAFT_PART_INSTALL/usr/bin:$PATH"
      flutter doctor
    build-packages:
      - clang
      - cmake
      - curl
      - ninja-build
      - unzip
    override-prime: ""

  libqaul:
    plugin: nil
    source: https://github.com/qaul/qaul.net.git
    after: [rust-deps]
    build-packages:
      - protobuf-compiler
      - libc-bin
    stage-packages:
      - libc-bin
    override-build: |
      export PATH="$HOME/.cargo/bin:$PATH"
      cargo --version

      cd rust/libqaul || exit 1

      rm build.rs
      cargo build --release

      cd ..

      mkdir -p $SNAPCRAFT_PART_INSTALL/bin/lib
      cp target/release/liblibqaul.so $SNAPCRAFT_PART_INSTALL/bin/lib

  qaul:
    plugin: nil
    after: [flutter-deps]
    source: .
    build-packages:
      # GStreamer: audioplayer dependency (https://pub.dev/packages/audioplayers_linux#setup-for-linux)
      - libgstreamer1.0-dev
      - libgstreamer-plugins-base1.0-dev
    override-build: |
      set -eux
                      
      BEFORE="_lib = DynamicLibrary.open('../rust/target/\$mode/liblibqaul.so');"
      AFTER="_lib = DynamicLibrary.open('\${Platform.environment['SNAP']}/bin/lib/liblibqaul.so');"
      sed -i -e "s|$BEFORE|$AFTER|g" packages/qaul_rpc/lib/src/libqaul/ffi.dart

      flutter pub get || true
      flutter build linux --release -v

      mkdir -p $SNAPCRAFT_PART_INSTALL/bin
      cp -r build/linux/*/release/bundle/* $SNAPCRAFT_PART_INSTALL/bin/

  assets-and-dependencies:
    plugin: nil
    after:
      - qaul
    stage-packages:
      - dmz-cursor-theme
      - fonts-dejavu
      - fonts-freefont-ttf
      - fonts-ubuntu
      # zenity: is a File Picker dependency (https://github.com/miguelpruivo/flutter_file_picker)
      - zenity
    build-packages:
      - curl
      - tar
