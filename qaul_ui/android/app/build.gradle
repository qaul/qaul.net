plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.protobuf"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

// Release signing configuration files
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

group = "net.qaul.app"
version = flutterVersionName

android {
    namespace "net.qaul.qaul_app"

    compileSdkVersion 34

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8

        // See: https://pub.dev/packages/flutter_local_notifications#gradle-setup
        coreLibraryDesugaringEnabled true
    }
    // https://developer.android.com/topic/libraries/view-binding/migration#kts
    buildFeatures {
        viewBinding = true
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "net.qaul.qaul_app"
        minSdkVersion 26
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        // See: https://pub.dev/packages/flutter_local_notifications#gradle-setup
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    // See: https://pub.dev/packages/flutter_local_notifications#gradle-setup
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.2'

    implementation "com.google.android.material:material:1.3.0"
	implementation "com.google.protobuf:protoc:3.25.1"
	implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-service:2.3.1"
    implementation 'androidx.core:core:1.12.0'

    implementation project(':libqaul')
    implementation project(':blemodule')

    implementation "androidx.work:work-runtime-ktx:2.8.1"
}
